CREATE TABLE IF NOT EXISTS USERS (
    USER_ID INT NOT NULL AUTO_INCREMENT,
    USERNAME VARCHAR(255) UNIQUE NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME VARCHAR(255) NOT NULL,
    EMAIL_ADDRESS VARCHAR(255) NOT NULL,
    CREATION_DATE DATE NOT NULL,

    PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS NEW_RELEASES (
    RELEASE_ID INT NOT NULL AUTO_INCREMENT,
    IMDB_ID VARCHAR(255) UNIQUE NOT NULL,
    TMDB_ID INT UNIQUE NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    POSTER VARCHAR(255) NOT NULL,
    RELEASE_WEEK VARCHAR(255) NOT NULL,

    PRIMARY KEY (RELEASE_ID)
);

CREATE TABLE IF NOT EXISTS MOVIES (
    MOVIE_ID INT NOT NULL AUTO_INCREMENT,
    IMDB_ID VARCHAR(255) UNIQUE NOT NULL,
    TMDB_ID INT UNIQUE NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    POSTER VARCHAR(255) NOT NULL,
    RELEASE_DATE VARCHAR(255) NOT NULL,

    PRIMARY KEY (MOVIE_ID)
);

CREATE TABLE IF NOT EXISTS CATALOG (
    USER_ID INT NOT NULL,
    MOVIE_ID INT NOT NULL,
    COPIES INT NOT NULL,

    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES (MOVIE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS WISH_LIST (
    USER_ID INT NOT NULL,
    MOVIE_ID INT NOT NULL,

    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (MOVIE_ID) REFERENCES MOVIES (MOVIE_ID) ON DELETE CASCADE
);